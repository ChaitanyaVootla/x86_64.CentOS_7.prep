resources:
  - name: x86_64_CentOS_7_prep_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: shippable/x86_64.CentOS_7.prep
      branch: master

  - name: c7_bits_access_cli
    type: cliConfig
    integration: aws_bits_access
    pointer:
      region: us-east-1

  - name: c7_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: dry-dock/c7
      branch: master

  - name: c7_img
    type: image
    integration: shipDH
    pointer:
      sourceName: "drydock/c7"
    seed:
      versionName: master

  - name: c7all_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: dry-dock/c7all
      branch: master

  - name: c7all_img
    type: image
    integration: shipDH
    pointer:
      sourceName: "drydock/c7all"
    seed:
      versionName: master

  - name: c7nodall_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: dry-dock/c7nodall
      branch: master

  - name: c7nodall_img
    type: image
    integration: shipDH
    pointer:
      sourceName: "drydock/c7nodall"
    seed:
      versionName: master

  - name: c7pytall_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: dry-dock/c7pytall
      branch: master

  - name: c7pytall_img
    type: image
    integration: shipDH
    pointer:
      sourceName: "drydock/c7pytall"
    seed:
      versionName: master

  - name: c7_dh_cli
    type: cliConfig
    integration: shipDH

  - name: CentOS7_reqExec_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: shippable/reqExec
      branch: master

  - name: c7_micro_repo
    type: gitRepo
    integration: avinci_gh
    pointer:
      sourceName: Shippable/micro
      branch: master

jobs:
  - name: reqExec_x86_64_CentOS_7_pack
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    runtime:
      nodePool: x86_c07_cus_01
    steps:
      - IN: x86_64_CentOS_7_prep_repo
        switch: off
      - IN: c7_bits_access_cli
        switch: off
      - IN: CentOS7_reqExec_repo
      - TASK:
          name: create_centOS7_artifacts
          script:
            - pushd $(shipctl get_resource_state "x86_64_CentOS_7_prep_repo")
            - ./buildAndPushReqExecArtifacts.sh CentOS7_reqExec_repo
            - popd

  - name: reports_x86_64_CentOS_7_pack
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    runtime:
      nodePool: x86_c07_cus_01
    steps:
      - IN: x86_64_CentOS_7_prep_repo
        switch: off
      - IN: c7_bits_access_cli
        switch: off
      # Reports are unlikely to change too often, so manually build when required.
      - IN: c7_micro_repo
        switch: off
      - TASK:
          runtime:
            options:
              # Note: It doesn't matter which image we use as Go can cross-compile and all
              # the x86_64 binaries are the same. Use the Shippable CentOS_7 image if it becomes available
              # as it will serve as an image test.
              imageName: drydock/u16golall
              imageTag: v6.1.4
          script:
            # Note: gvm doesn't seem to load automatically, so add it to the PATH manually.
            # Remove this if its not needed anymore.
            - PATH="$PATH:/root/.gvm/gos/go1.9.2/bin"
            - pushd $(shipctl get_resource_state "x86_64_CentOS_7_prep_repo")
            - ./buildAndPushReportsArtifacts.sh c7_micro_repo
            - popd

  - name: x86_64_CentOS_7_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: x86_64_CentOS_7_prep_repo
        switch: off
      - IN: c7_dh_cli
        switch: off
      - IN: c7_repo
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "x86_64_CentOS_7_prep_repo")
            - ./buildImage.sh c7 x86_64_CentOS_7_prep
            - popd
      - OUT: c7_img

  - name: all_x86_64_CentOS_7_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: x86_64_CentOS_7_prep_repo
        switch: off
      - IN: c7_dh_cli
        switch: off
      - IN: c7_img
      - IN: c7all_repo
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "x86_64_CentOS_7_prep_repo")
            - ./buildImage.sh c7all all_x86_64_CentOS_7_prep
            - docker run "drydock/c7all:master" "/c7all/services/service_test.sh"
            - popd
      - OUT: c7all_img

  - name: nodall_x86_64_CentOS_7_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: x86_64_CentOS_7_prep_repo
        switch: off
      - IN: c7_dh_cli
        switch: off
      - IN: c7all_img
      - IN: c7nodall_repo
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "x86_64_CentOS_7_prep_repo")
            - ./buildImage.sh c7nodall nodall_x86_64_CentOS_7_prep
            - popd
      - OUT: c7nodall_img

  - name: pytall_x86_64_CentOS_7_prep
    type: runSh
    triggerMode: parallel
    dependencyMode: strict
    steps:
      - IN: x86_64_CentOS_7_prep_repo
        switch: off
      - IN: c7_dh_cli
        switch: off
      - IN: c7all_img
      - IN: c7pytall_repo
      - TASK:
          script:
            - pushd $(shipctl get_resource_state "x86_64_CentOS_7_prep_repo")
            - ./buildImage.sh c7pytall pytall_x86_64_CentOS_7_prep
            - popd
      - OUT: c7pytall_img
